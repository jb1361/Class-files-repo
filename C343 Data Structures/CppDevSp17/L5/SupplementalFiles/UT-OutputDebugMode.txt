------ Discover test started ------
========== Discover test finished: 39 found (0:00:00.1751161) ==========
------ Run test started ------
UT01ConstructorV1: Sequence1();
	outgoing: s1 = <>

Internal representation:
head: 00000000

UT02ClearV1: s1.clear();
	incoming: s1 = <>
	outgoing: s1 = <>

Internal representation:
head: 00000000

UT02ClearV2: s1.clear();
	incoming: s1 = <33>
	outgoing: s1 = <>

Internal representation:
head: 00000000

UT03TransferFromV1: s1.transferFrom(s2);
	incoming: s1 = <> and s2 = <>
	outgoing: s1 = <> and s2 = <>

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT03TransferFromV2: s1.transferFrom(s2);
	incoming: s1 = <> and s2 = <44>
	outgoing: s1 = <44> and s2 = <>

Internal representation:
head: 05A2DFD0
Node #0: (05A2DFD0, 44, 00000000)


Internal representation:
head: 00000000

UT03TransferFromV3: s1.transferFrom(s2);
	incoming: s1 = <55> and s2 = <>
	outgoing: s1 = <> and s2 = <>

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT03TransferFromV4: s1.transferFrom(s2);
	incoming: s1 = <10> and s2 = <22>
	outgoing: s1 = <22> and s2 = <>

Internal representation:
head: 05A2DCC0
Node #0: (05A2DCC0, 22, 00000000)


Internal representation:
head: 00000000

UT04AssignmentV1: s1 = s2;
	incoming: s1 = <> and s2 = <>
	outgoing: s1 = <> and s2 = <>

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT04AssignmentV2: s1 = s2;
	incoming: s1 = <> and s2 = <27>
	outgoing: s1 = <27> and s2 = <27>

Internal representation:
head: 05A2DFD0
Node #0: (05A2DFD0, 27, 00000000)


Internal representation:
head: 05A2DB70
Node #0: (05A2DB70, 27, 00000000)

UT04AssignmentV3: s1 = s2;
	incoming: s1 = <10> and s2 = <>
	outgoing: s1 = <> and s2 = <>

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT04AssignmentV4: s1 = s2;
	incoming: s1 = <10> and s2 = <37>
	outgoing: s1 = <37> and s2 = <37>

Internal representation:
head: 05A2D9E8
Node #0: (05A2D9E8, 37, 00000000)


Internal representation:
head: 05A2DE10
Node #0: (05A2DE10, 37, 00000000)

UT05AddV1: s1.add(j, k);
	incoming: s1 = <> and j = 0 and k = 15
	outgoing: s1 = <15> and j = 0 and k = 0

Internal representation:
head: 05A2DB70
Node #0: (05A2DB70, 15, 00000000)

UT05AddV2: s1.add(j, k);
	incoming: s1 = <15> and j = 0 and k = 25
	outgoing: s1 = <25,15> and j = 0 and k = 0

Internal representation:
head: 05A2DB70
Node #0: (05A2DB70, 25, 05A2DE10)
Node #1: (05A2DE10, 15, 00000000)

UT05AddV3: s1.add(1, k);
	incoming: s1 = <15> and j = 1 and k = 25
	outgoing: s1 = <15,25> and j = 1 and k = 0

Internal representation:
head: 05A2D9E8
Node #0: (05A2D9E8, 15, 05A2E078)
Node #1: (05A2E078, 25, 00000000)

UT05AddV4: s1.add(1, k);
	incoming: s1 = <15,25> and j = 1 and k = 20
	outgoing: s1 = <15,20,25> and j = 1 and k = 0

Internal representation:
head: 05A2D9E8
Node #0: (05A2D9E8, 15, 05A2DBE0)
Node #1: (05A2DBE0, 20, 05A2DE10)
Node #2: (05A2DE10, 25, 00000000)

UT06RemoveV1: s1.remove(j, k);
	incoming: s1 = <77> and j = 0 and k = 0
	outgoing: s1 = <> and j = 0 and k = 77

Internal representation:
head: 00000000

UT06RemoveV2: s1.remove(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 4 and k = 0
	outgoing: s1 = <11,33,55,77> and j = 4 and k = 99

Internal representation:
head: 05A2DF60
Node #0: (05A2DF60, 11, 05A2E078)
Node #1: (05A2E078, 33, 05A2DF28)
Node #2: (05A2DF28, 55, 05A2DEF0)
Node #3: (05A2DEF0, 77, 00000000)

UT06RemoveV3: s1.remove(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 2 and k = 0
	outgoing: s1 = <11,33,77,99> and j = 2 and k = 55

Internal representation:
head: 05A2DE10
Node #0: (05A2DE10, 11, 05A2DB70)
Node #1: (05A2DB70, 33, 05A2DF98)
Node #2: (05A2DF98, 77, 05A2DEF0)
Node #3: (05A2DEF0, 99, 00000000)

UT06RemoveV4: s1.remove(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 0 and k = 0
	outgoing: s1 = <33,55,77,99> and j = 0 and k = 11

Internal representation:
head: 05A2DEF0
Node #0: (05A2DEF0, 33, 05A2DE10)
Node #1: (05A2DE10, 55, 05A2DF60)
Node #2: (05A2DF60, 77, 05A2DB70)
Node #3: (05A2DB70, 99, 00000000)

UT07ReplaceEntryV1: s1.replaceEntry(j, k);
	incoming: s1 = <77> and j = 0 and k = 8
	outgoing: s1 = <8> and j = 0 and k = 77

Internal representation:
head: 05A2DF28
Node #0: (05A2DF28, 8, 00000000)

UT07ReplaceEntryV2: s1.replaceEntry(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 4 and k = 8
	outgoing: s1 = <11,33,55,77,8> and j = 4 and k = 99

Internal representation:
head: 05A2DFD0
Node #0: (05A2DFD0, 11, 05A2DF28)
Node #1: (05A2DF28, 33, 05A2DF98)
Node #2: (05A2DF98, 55, 05A2DF60)
Node #3: (05A2DF60, 77, 05A2E078)
Node #4: (05A2E078, 8, 00000000)

UT07ReplaceEntryV3: s1.replaceEntry(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 2 and k = 8
	outgoing: s1 = <11,33,8,77,99> and j = 2 and k = 55

Internal representation:
head: 05A2DCC0
Node #0: (05A2DCC0, 11, 05A2DE10)
Node #1: (05A2DE10, 33, 05A2DEF0)
Node #2: (05A2DEF0, 8, 05A2DF98)
Node #3: (05A2DF98, 77, 05A2DF60)
Node #4: (05A2DF60, 99, 00000000)

UT07ReplaceEntryV4: s1.replaceEntry(j, k);
	incoming: s1 = <11,33,55,77,99> and j = 0 and k = 8
	outgoing: s1 = <8,33,55,77,99> and j = 0 and k = 11

Internal representation:
head: 05A2DF98
Node #0: (05A2DF98, 8, 05A2DF60)
Node #1: (05A2DF60, 33, 05A2DEF0)
Node #2: (05A2DEF0, 55, 05A2DBE0)
Node #3: (05A2DBE0, 77, 05A2DF28)
Node #4: (05A2DF28, 99, 00000000)

UT08EntryV1: s1.entry(j);
	incoming: s1 = <77> and j = 0
	outgoing: s1 = <77> and j = 0

Internal representation:
head: 05A2DBE0
Node #0: (05A2DBE0, 77, 00000000)

UT08EntryV2: s1.entry(j);
	incoming: s1 = <11,33,55,77,99> and j = 4
	outgoing: s1 = <11,33,55,77,99> and j = 4

Internal representation:
head: 05A2DEF0
Node #0: (05A2DEF0, 11, 05A2DE10)
Node #1: (05A2DE10, 33, 05A2DBE0)
Node #2: (05A2DBE0, 55, 05A2DB70)
Node #3: (05A2DB70, 77, 05A2DF28)
Node #4: (05A2DF28, 99, 00000000)

UT08EntryV3: s1.entry(j);
	incoming: s1 = <11,33,55,77,99> and j = 2
	outgoing: s1 = <11,33,55,77,99> and j = 2

Internal representation:
head: 05A2DF28
Node #0: (05A2DF28, 11, 05A2DC18)
Node #1: (05A2DC18, 33, 05A2DEF0)
Node #2: (05A2DEF0, 55, 05A2DBE0)
Node #3: (05A2DBE0, 77, 05A2DCC0)
Node #4: (05A2DCC0, 99, 00000000)

UT08EntryV4: s1.entry(j);
	incoming: s1 = <11,33,55,77,99> and j = 0
	outgoing: s1 = <11,33,55,77,99> and j = 0

Internal representation:
head: 05A2DEF0
Node #0: (05A2DEF0, 11, 05A2DF28)
Node #1: (05A2DF28, 33, 05A2DCC0)
Node #2: (05A2DCC0, 55, 05A2DBE0)
Node #3: (05A2DBE0, 77, 05A2E078)
Node #4: (05A2E078, 99, 00000000)

UT09AppendV1: s1.append(s2);
	incoming: s1 = <> and s2 = <>
	outgoing: s1 = <> and s2 = <>

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT09AppendV2: s1.append(s2);
	incoming: s1 = <> and s2 = <44>
	outgoing: s1 = <44> and s2 = <>

Internal representation:
head: 05A2E078
Node #0: (05A2E078, 44, 00000000)


Internal representation:
head: 00000000

UT09AppendV3: s1.append(s2);
	incoming: s1 = <55> and s2 = <>
	outgoing: s1 = <55> and s2 = <>

Internal representation:
head: 05A2DEF0
Node #0: (05A2DEF0, 55, 00000000)


Internal representation:
head: 00000000

UT09AppendV4: s1.append(s2);
	incoming: s1 = <10> and s2 = <22>
	outgoing: s1 = <10,22> and s2 = <>

Internal representation:
head: 05A2DF28
Node #0: (05A2DF28, 10, 05A2DFD0)
Node #1: (05A2DFD0, 22, 00000000)


Internal representation:
head: 00000000

UT10SplitV1: s1.split(j, s2);
	incoming: s1 = <> and s2 = <> and j = 0
	outgoing: s1 = <> and s2 = <> and j = 0

Internal representation:
head: 00000000


Internal representation:
head: 00000000

UT10SplitV2: s1.split(j, s2);
	incoming: s1 = <11,33,55,77,99> and s2 = <> and j = 0
	outgoing: s1 = <> and s2 = <11,33,55,77,99> and j = 0

Internal representation:
head: 00000000


Internal representation:
head: 05A2E078
Node #0: (05A2E078, 11, 05A2DC18)
Node #1: (05A2DC18, 33, 05A2DF28)
Node #2: (05A2DF28, 55, 05A2DBE0)
Node #3: (05A2DBE0, 77, 05A2DB70)
Node #4: (05A2DB70, 99, 00000000)

UT10SplitV3: s1.split(j, s2);
	incoming: s1 = <11,33,55,77,99> and s2 = <> and j = 2
	outgoing: s1 = <11,33> and s2 = <55,77,99> and j = 2

Internal representation:
head: 05A2E008
Node #0: (05A2E008, 11, 05A2DF28)
Node #1: (05A2DF28, 33, 00000000)


Internal representation:
head: 05A2DE10
Node #0: (05A2DE10, 55, 05A2DEF0)
Node #1: (05A2DEF0, 77, 05A2DCC0)
Node #2: (05A2DCC0, 99, 00000000)

UT10SplitV4: s1.split(j, s2);
	incoming: s1 = <11,33,55,77,99> and s2 = <> and j = 0
	outgoing: s1 = <> and s2 = <11,33,55,77,99> and j = 0

Internal representation:
head: 00000000


Internal representation:
head: 05A2DFD0
Node #0: (05A2DFD0, 11, 05A2DF98)
Node #1: (05A2DF98, 33, 05A2DF60)
Node #2: (05A2DF60, 55, 05A2DBE0)
Node #3: (05A2DBE0, 77, 05A2DF28)
Node #4: (05A2DF28, 99, 00000000)

UT10SplitV5: s1.split(j, s2);
	incoming: s1 = <11,33,55,77,99> and s2 = <100> and j = 3
	outgoing: s1 = <11,33,55> and s2 = <77,99> and j = 3

Internal representation:
head: 05A2DF60
Node #0: (05A2DF60, 11, 05A2DF28)
Node #1: (05A2DF28, 33, 05A2DCC0)
Node #2: (05A2DCC0, 55, 00000000)


Internal representation:
head: 05A2DC18
Node #0: (05A2DC18, 77, 05A2DBE0)
Node #1: (05A2DBE0, 99, 00000000)

UT11LengthV1: s1.length();
	incoming: s1 = <>
	outgoing: s1 = <>

Internal representation:
head: 00000000

UT11LengthV2: s1.length();
	incoming: s1 = <95>
	outgoing: s1 = <95>

Internal representation:
head: 05A2DBE0
Node #0: (05A2DBE0, 95, 00000000)

UT11LengthV3: s1.length();
	incoming: s1 = <11,33,55,77,99>
	outgoing: s1 = <11,33,55,77,99>

Internal representation:
head: 05A2DEF0
Node #0: (05A2DEF0, 11, 05A2DE10)
Node #1: (05A2DE10, 33, 05A2DBE0)
Node #2: (05A2DBE0, 55, 05A2DB70)
Node #3: (05A2DB70, 77, 05A2DF28)
Node #4: (05A2DF28, 99, 00000000)

========== Run test finished: 39 run (0:00:00.1911271) ==========
